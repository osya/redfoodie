@model redfoodie.Models.RegisterViewModel
@{
    ViewBag.Title = "Sign Up";
}
<div id="Signup" data-modal-content-container="1" data-modal-wrapper-class="width_350" class="login_wrapper">
    <h3 class="form-signin-heading">@ViewBag.Title</h3>
    <div class="row facebook-link-storage">
        <div class="col-md-10 col-md-offset-1">
            <div class="fb-sign-up fb-button"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <div class="divi-new"><span>OR</span></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            @using (Ajax.BeginForm("Register", "Account", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "registerSuccess" }, new { role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(x => x.UserName), style = "background-image: url(\"data:image / png; base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8 / 9hAAABHklEQVQ4EaVTO26DQBD1ohQWaS2lg9JybZ + AK7hNwx2oIoVf4UPQ0Lj1FdKktevIpel8AKNUkDcWMxpgSaIEaTVv3sx7uztiTdu2s / 98DywOw3Dued4Who / M2aIx5lZV1aEsy0 + qiwHELyi + Ytl0PQ69SxAxkWIA4RMRTdNsKE59juMcuZd6xIAFeZ6fGCdJ8kY4y7KAuTRNGd7jyEBXsdOPE3a0QGPsniOnnYMO67LgSQN9T41F2QGrQRRFCwyzoIF2qyBuKKbcOgPXdVeY9rMWgNsjf9ccYesJhk3f5dYT1HX9gR0LLQR30TnjkUEcx2uIuS4RnI + aj6sJR0AM8AaumPaM / rRehyWhXqbFAA9kh3 / 8 / NvHxAYGAsZ / il8IalkCLBfNVAAAAABJRU5ErkJggg == \"); background-attachment: scroll; background-size: 16px 18px; background-position: 98% 50%; background-repeat: no-repeat; cursor: pointer;" })
                    @Html.ValidationMessagesFor(m => m.UserName, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(x => x.Email), style = "background-image: url(\"data:image / png; base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAASCAYAAABSO15qAAAAAXNSR0IArs4c6QAAAPhJREFUOBHlU70KgzAQPlMhEvoQTg6OPoOjT + JWOnRqkUKHgqWP4OQbOPokTk6OTkVULNSLVc62oJmbIdzd95NcuGjX2 / 3YVI / Ts + t0WLE2ut5xsQ0O + 90F6UxFjAI8qNcEGONia08e6MNONYwCS7EQAizLmtGUDEzTBNd1fxsYhjEBnHPQNG3KKTYV34F8ec / zwHEciOMYyrIE3 / ehKAqIoggo9inGXKmFXwbyBkmSQJqmUNe15IRhCG3byphitm1 / eUzDM4qR0TTNjEixGdAnSi3keS5vSk2UDKqqgizLqB4YzvassiKhGtZ / jDMtLOnHz7TE + yf8BaDZXA509yeBAAAAAElFTkSuQmCC\"); background-attachment: scroll; background-size: 16px 18px; background-position: 98% 50%; background-repeat: no-repeat;" } })
                    @Html.ValidationMessagesFor(m => m.Email, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(x => x.Password), style = "background-image: url(\"data:image / png; base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8 / 9hAAACIUlEQVQ4EX2TOYhTURSG87IMihDsjGghBhFBmHFDHLWwSqcikk4RRKJgk0KL7C8bMpWpZtIqNkEUl1ZCgs0wOo0SxiLMDApWlgOPrH7 / 5b2QkYwX7jvn / uc//zl3edZ4PPbNGvF4fC4ajR5VrNvt/mo0Gr1ZPOtfgWw2e9Lv9+chX7cs64CS4Oxg3o9GI7tUKv0Q5o1dAiTfCgQCLwnOkfQOu+oSLyJ2A783HA7vIPLGxX0TgVwud4HKn0nc7Pf7N6vV6oZHkkX8FPG3uMfgXC0Wi2vCg/poUKGGcagQI3k7k8mcp5slcGswGDwpl8tfwGJg3xB6Dvey8vz6oH4C3iXcFYjbwiDeo1KafafkC3NjK7iL5ESFGQEUF7Sg+ifZdDp9GnMF/KGmfBdT2HCwZ7TwtrBPC7rQaav6Iv48rqZwg+F+p8hOMBj0IbxfMdMBrW5pAVGV/ztINByENkU0t5BIJEKRSOQ3Aj+Z57iFs1R5NK3EQS6HQqF1zmQdzpFWq3W42WwOTAf1er1PF2USFlC+qxMvFAr3HcexWX+QX6lUvsKpkTyPSEXJkw6MQ4S38Ljdbi8rmM/nY+CvgNcQqdH6U/xrYK9t244jZv6ByUOSiDdIfgBZ12U6dHEHu9TpdIr8F0OP692CtzaW/a6y3y0Wx5kbFHvGuXzkgf0xhKnPzA4UTyaTB8Ph8AvcHi3fnsrZ7Wore02YViqVOrRXXPhfqP8j6MYlawoAAAAASUVORK5CYII=\"); background-attachment: scroll; background-size: 16px 18px; background-position: 98% 50%; background-repeat: no-repeat; cursor: auto;" })
                    @Html.ValidationMessagesFor(m => m.Password, new { @class = "text-danger" })
                </div>
                <button type="submit" class="btn btn-primary btn-lg btn-block form-sign-submit-button" id="submit-user-registration" value="Register">
                    Sign Up
                </button>
            }
        </div>
    </div>
    <hr class="login_wrapper_hr">
    <div class="row">
        Already have an account? <a data-modal-link="1" href="#login">Log in now »</a>
    </div>
</div>
<script>
    function registerSuccess(data) {
        if (data.Success === true) {
            // RedirectToAction("Index", "Home");
            window.location.reload();
        } else {
            // display errors
            for (var property in data.ModelState) {
                if (data.ModelState.hasOwnProperty(property)) {
                    $("#Signup #" + property + "+span").text(data.ModelState[property].join(" "));
                }
            }
        }
    }
</script>